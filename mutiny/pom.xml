<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>dev.ikm.build</groupId>
        <artifactId>java-parent</artifactId>
        <version>1.47.0</version>
        <relativePath></relativePath>
    </parent>

    <groupId>dev.ikm.jpms</groupId>
    <artifactId>mutiny</artifactId>
    <name>Mutiny</name>
    <version>${core.artifact.version}-${core.artifact.release}</version>
    <description>
        Builds the httpmime.  Requires the smallrye-common-annotation be built first and be excluded
        from any other poms requiring it.
    </description>

    <properties>
        <!-- change release here-->
        <core.artifact.version>2.1.0</core.artifact.version>
        <core.artifact.release>r6</core.artifact.release>

        <!-- transitive dependency versions -->
        <smallrye-common-annotation.version>1.8.0-r4</smallrye-common-annotation.version>
        <org.reactivestreams.version>1.3.1-r2</org.reactivestreams.version>
        <smallrye-common-annotation.version>2.0.0</smallrye-common-annotation.version>

        <maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>
        <maven.moditect.plugin>1.0.0.RC2</maven.moditect.plugin>
        <maven.antrun.plugin>3.1.0</maven.antrun.plugin>
    </properties>

    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <!-- transitive dependencies of the repackaged artifact -->
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>smallrye-common-annotation</artifactId>
            <version>${smallrye-common-annotation.version}</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/</directory>
                <includes>
                    <include>LICENSE.txt</include>
                </includes>
            </resource>
        </resources>
        
        <pluginManagement>
            <plugins>												
                <plugin>  
                    <groupId>org.moditect</groupId>
                    <artifactId>moditect-maven-plugin</artifactId>
                    <version>${maven.moditect.plugin}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>sources</id>
						<goals>
							<goal>copy</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>io.smallrye.reactive</groupId>
									<artifactId>mutiny</artifactId>
									<version>${core.artifact.version}</version>
									<classifier>sources</classifier>
								</artifactItem>
								<artifactItem>
									<groupId>io.smallrye.reactive</groupId>
									<artifactId>mutiny</artifactId>
									<version>${core.artifact.version}</version>
									<classifier>javadoc</classifier>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-artifacts</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>attach-artifact</goal>
						</goals>
						<configuration>
							<artifacts>
								<artifact>
									<file>
										${project.build.directory}/dependency/mutiny-${core.artifact.version}-sources.jar</file>
									<type>jar</type>
									<classifier>sources</classifier>
								</artifact>
								<artifact>
									<file>
										${project.build.directory}/dependency/mutiny-${core.artifact.version}-javadoc.jar</file>
									<type>jar</type>
									<classifier>javadoc</classifier>
								</artifact>
							</artifacts>
						</configuration>
					</execution>
				</executions>
			</plugin>
                        
            <plugin>
                <groupId>org.moditect</groupId>
                <artifactId>moditect-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-module-infos</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>add-module-info</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/moditect</outputDirectory>
                            <overwriteExistingFiles>true</overwriteExistingFiles>
                            <modules>
                                <module>
                                    <artifact>
                                        <groupId>io.smallrye.reactive</groupId>
                                        <artifactId>mutiny</artifactId>
                                        <version>${core.artifact.version}</version>
                                    </artifact>
                                    <moduleInfoSource>
                                        module io.smallrye.reactive.mutiny {
                                            requires org.reactivestreams;
                                            requires io.smallrye.common.annotation;

                                            exports io.smallrye.mutiny;
                                            exports io.smallrye.mutiny.converters;
                                            exports io.smallrye.mutiny.converters.multi;
                                            exports io.smallrye.mutiny.converters.uni;
                                            exports io.smallrye.mutiny.groups;
                                            exports io.smallrye.mutiny.helpers;
                                            exports io.smallrye.mutiny.helpers.queues;
                                            exports io.smallrye.mutiny.helpers.spies;
                                            exports io.smallrye.mutiny.helpers.test;
                                            exports io.smallrye.mutiny.infrastructure;
                                            exports io.smallrye.mutiny.operators;
                                            exports io.smallrye.mutiny.operators.multi;
                                            exports io.smallrye.mutiny.operators.multi.builders;
                                            exports io.smallrye.mutiny.operators.multi.multicast;
                                            exports io.smallrye.mutiny.operators.multi.overflow;
                                            exports io.smallrye.mutiny.operators.multi.processors;
                                            exports io.smallrye.mutiny.operators.uni.builders;
                                            exports io.smallrye.mutiny.subscription;
                                            exports io.smallrye.mutiny.tuples;
                                            exports io.smallrye.mutiny.unchecked;

                                            uses io.smallrye.mutiny.infrastructure.MultiInterceptor;
                                            uses io.smallrye.mutiny.infrastructure.ExecutorConfiguration;
                                            uses io.smallrye.mutiny.infrastructure.UniInterceptor;
                                            uses io.smallrye.mutiny.infrastructure.CallbackDecorator;
                                        }
                                    </moduleInfoSource>
                                </module>
                            </modules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
					<execution>
						<id>rename-sources</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="renaming sources file" />
								<copy file="${project.build.directory}/dependency/mutiny-${core.artifact.version}-sources.jar"
									  tofile="${project.build.directory}/mutiny-${core.artifact.version}-${core.artifact.release}-sources.jar" />
							</target>
						</configuration>
					</execution>
					<execution>
						<id>rename-javadoc</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<echo message="renaming javadoc file" />
								<copy file="${project.build.directory}/dependency/mutiny-${core.artifact.version}-javadoc.jar"
									  tofile="${project.build.directory}/mutiny-${core.artifact.version}-${core.artifact.release}-javadoc.jar" />
							</target>
						</configuration>
					</execution>					
                    <execution>
                        <phase>prepare-package</phase>
                        <configuration>
                            <target>
                                <echo message="unzipping files" />
                                <unzip src="${project.build.directory}/moditect/mutiny-${core.artifact.version}.jar"
                                       dest="${project.build.directory}/classes/" >
                                    <patternset>
                                        <exclude name="**/ECLIPSE_.RSA"/>
                                        <exclude name="**/ECLIPSE_.SF"/>
                                        <exclude name="**/MANIFEST.MF"/>
                                    </patternset>
                                </unzip>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
